AWSTemplateFormatVersion: '2010-09-09'
Description: 'Parent Stack to create nested stacks for EKS cluster, node group, ASG, lambda, and IAM resources.'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'EKS Configuration'
        Parameters:
          - ClusterName
          - Environment
          - EnvSize
          - KeyName
          - LambdaRoleArn
          - NodeGroupName
          - NodeImageId
      - Label:
          default: 'Auto Scaling Configuration'
        Parameters:
          - ASGMinSize
          - ASGDesiredSize
          - ASGMaxSize
          - InstanceTypesOverride
          - NodeInstanceType
          - OnDemandBaseCapacity
      -
        Label:
          default: 'Import Stacks'
        Parameters:
          - VPCStackName
Parameters:
  ASGMinSize:
    Type: Number
    Description: Minimum size of Node Group ASG.
    Default: 1

  ASGDesiredSize:
    Type: Number
    Description: Desired size of Node Group ASG.
    Default: 2

  ASGMaxSize:
    Type: Number
    Description: Maximum size of Node Group ASG.
    Default: 3

  ClusterName:
    Description: The cluster name provided when the cluster was created.  If it is incorrect, nodes will not be able to join the cluster.
    Type: String

  ClusterVersion:
    Description: Cluster Version
    Type: String
    Default: 'latest'
    AllowedValues:
      - '1.10'
      - '1.11'
      - '1.12'
      - 'latest'

  InstanceTypesOverride:
    Description: Instance Types Overrides
    Type: String
    Default: 't3.medium,t3.large,t3.xlarge'

  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: String
    Default: 'dev'

  LambdaRoleArn:
    Description: Lambda IAM Role Arn
    Type: String

  NodeGroupName:
    Description: Unique resource identifier for the Node Group.
    Type: String

  NodeInstanceType:
    Description: Default EC2 instance type for the node instances.
    Type: String
    Default: t3.small
    AllowedValues:
    - t3.small
    - t3.medium
    - t3.large
    ConstraintDescription: must be a valid EC2 instance type.

  OnDemandBaseCapacity:
    Type: Number
    Description: 'on-demand base capacity'
    Default: 2

  VPCStackName:
    Description: 'Name of the existing VPC CloudFormation stack to import resources from.'
    Type: String
    Default: 'eks-vpc'

Mappings:
  LayerArn:
    us-east-1:
      kubectl: 'arn:aws:lambda:us-east-1:627177891842:layer:lambda-layer-kubectl:2'

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://granite-eks-playground.s3.amazonaws.com/vpc.yaml'
      Parameters:
        Envionment: 'dev'

  Cluster:
    DependsOn: VPC
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://granite-eks-playground.s3.amazonaws.com/cluster.yaml'
      Parameters:
        ClusterName: !Ref ClusterName
        ClusterVersion: !Ref ClusterVersion
        SubnetIds: !GetAtt VPC.Outputs.SubnetsPrivate
        VpcId: !GetAtt VPC.Outputs.VPC

  AMI:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://granite-eks-playground.s3.amazonaws.com/ami.yaml'
      Parameters:
        ClusterVersion: !Ref ClusterVersion

  NodeGroup:
    DependsOn:
      - Cluster
      - AMI
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://granite-eks-playground.s3.amazonaws.com/nodegroup-dev.yaml'
      Parameters:
        ClusterControlPlaneSecurityGroup: !GetAtt Cluster.Outputs.ControlSecurityGroup
        ClusterName: !Ref ClusterName
        InstanceTypesOverride: !Ref InstanceTypesOverride
        KeyName: !Ref KeyName
        LatestAMIId: !GetAtt AMI.Outputs.AmiId
        NodeSecurityGroup: !GetAtt Cluster.Outputs.NodeSecurityGroup
        NodeGroupName: !Ref NodeGroupName
        ASGMinSize: !Ref ASGMinSize
        ASGDesiredSize: !Ref ASGDesiredSize
        ASGMaxSize: !Ref ASGMaxSize
        OnDemandBaseCapacity: !Ref OnDemandBaseCapacity
        Subnets: !GetAtt VPC.Outputs.SubnetsPrivate
        VpcId: !GetAtt VPC.Outputs.VPC

  ConfigMapLambda:
    DependsOn: NodeGroup
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://granite-eks-playground.s3.amazonaws.com/configmap-sar.yaml'
      Parameters:
        ClusterName: !Ref ClusterName
        LambdaRoleArn: !Ref LambdaRoleArn
        LambdaLayerKubectlArn: !FindInMap
          - LayerArn
          - !Ref 'AWS::Region'
          - kubectl
        NodeInstanceRoleArn: !GetAtt NodeGroup.Outputs.NodeInstanceRole


---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'EKS Control Plane'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: EKS Cluster
        Parameters:
          - ClusterName
          - ClusterVersion
          - Environment

      - Label:
          default: Import Stacks
        Parameters:
          - VPCStackName
Parameters:
  ClusterName:
    Description: The cluster name provided when the cluster was created.  If it is incorrect, nodes will not be able to join the cluster.
    Type: String

  ClusterVersion:
    Description: Cluster Version
    Type: String
    Default: "latest"
    AllowedValues:
      - "1.11"
      - "1.12"
      - "latest"

  Environment:
    Description: 'Name of the environment for this stack.'
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

  VPCStackName:
    Description: 'Name of the existing VPC CloudFormation stack to import resources from.'
    Type: String
    Default: 'eks-vpc'

Conditions:
  CreateCustomVersionCluster: !Not [!Equals [!Ref ClusterVersion, latest]]

Resources:
  #####
  # Cluster
  #####
  EKSCluster:
    Type: "AWS::EKS::Cluster"
    Properties:
      Name: !Ref ClusterName
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref ControlPlaneSecurityGroup
        SubnetIds: !Split
        - ','
        - Fn::ImportValue: !Sub '${VPCStackName}-SubnetsPrivate'
      RoleArn: !GetAtt EksServiceRole.Arn
      # Default version is latest
      Version:
         Fn::If:
          - CreateCustomVersionCluster
          - !Ref ClusterVersion
          - !Ref AWS::NoValue

  #####
  # Security Groups and IAM
  #####
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId:
        Fn::ImportValue: !Sub '${VPCStackName}-VPCId'

  EksServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "eks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
      RoleName: !Sub "EksSvcRole-${AWS::StackName}"

Outputs:
  ClusterArn:
    Description: 'EKS Cluster Arn'
    Value: !GetAtt EKSCluster.Arn
    Export:
      Name: !Sub '${AWS::StackName}-EKSClusterArn'

  ClusterEndPoint:
    Description: 'EKS Cluster EndPoint'
    Value: !GetAtt EKSCluster.Endpoint
    Export:
      Name: !Sub '${AWS::StackName}-EKSClusterEndPoint'

  ClusterName:
    Description: 'EKS Cluster Name'
    Value: !Ref EKSCluster
    Export:
      Name: !Sub '${AWS::StackName}-EKSClusterName'

  SecurityGroup:
    Description: Security group for the cluster control plane
    Value: !Ref ControlPlaneSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-ControlPlaneSecurityGroup'